(defun check-next (k l m n)
  (cond ((and (= (+ 2 k) m) (= (1+ l) n)) T)
        ((and (= (+ 2 k) m) (= (- l 1) n)) T)
        ((and (= (- k 2) m) (= (- l 1) n)) T)
        ((and (= (- k 2) m) (= (- l 1) n)) T)
        ((and (= (1+ k) m) (= (+ 2 l) n)) T)
        ((and (= (1+ k) m) (= (- l 2) n)) T)
        ((and (= (- k 1) m) (= (+ 2 l) n)) T)
        ((and (= (- k 1) m) (= (- l 2) n)) T)))
 (defun knight-moves (k l m n)
  (cond ((check-next k l m n) T)
        ((AND (<= (+ 2 k) 8) (<= (1+ l) 8) (check-next (+ 2 k) (1+ l) m n)) (values (+ 2 k) (1+ l)))
        ((AND (<= (+ 2 k) 8) (>= (- l 1) 1) (check-next (+ 2 k) (- l 1) m n)) (values (+ 2 k) (- l 1)))
        ((AND (>= (- k 2) 1) (>= (- l 1) 1) (check-next (- k 2) (- l 1) m n)) (values (- k 2) (1- l)))
        ((AND (>= (- k 2) 1) (<= (1+ l) 8) (check-next (- k 2) (1+ l) m n)) (values (- k 2) (1+ l)))
        ((AND (<= (1+ k) 8) (<= (+ 2 l) 8) (check-next (1+ k) (+ 2 l) m n)) (values (1+ k) (+ 2 l)))
        ((AND (<= (1+ k) 8) (>= (- l 2) 1) (check-next (1+ k) (- l 2) m n)) (values (1+ k) (- l 2)))
        ((AND (>= (- k 1) 1) (<= (+ 2 l) 8) (check-next (- k 1) (+ 2 l) m n)) (values (- k 1) (+ 2 l)))
        ((AND (>= (- k 1) 1) (>= (- l 2) 1) (check-next (- k 1) (- l 2) m n)) (values (- k 1) (- l 2)))))
